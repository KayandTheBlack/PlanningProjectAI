(define (problem autogen)
  (:domain worldsEndAndBeyond)

  (:objects
    Origin cityA cityB cityC cityD cityE cityF cityG cityH cityI cityJ cityK cityL - city
    hotelA_A hotelA_B hotelB_A hotelB_B hotelC_A hotelC_B hotelD_A hotelD_B hotelE_A hotelE_B hotelF_A hotelF_B hotelG_A hotelG_B hotelH_A hotelH_B hotelI_A hotelI_B hotelJ_A hotelJ_B hotelK_A hotelK_B hotelL_A hotelL_B - hotel
  )

  (:init
    (currentLocation Origin)

    (hotelAt hotelA_A cityA)
    (hotelAt hotelA_B cityA)
    (hotelAt hotelB_A cityB)
    (hotelAt hotelB_B cityB)
    (hotelAt hotelC_A cityC)
    (hotelAt hotelC_B cityC)
    (hotelAt hotelD_A cityD)
    (hotelAt hotelD_B cityD)
    (hotelAt hotelE_A cityE)
    (hotelAt hotelE_B cityE)
    (hotelAt hotelF_A cityF)
    (hotelAt hotelF_B cityF)
    (hotelAt hotelG_A cityG)
    (hotelAt hotelG_B cityG)
    (hotelAt hotelH_A cityH)
    (hotelAt hotelH_B cityH)
    (hotelAt hotelI_A cityI)
    (hotelAt hotelI_B cityI)
    (hotelAt hotelJ_A cityJ)
    (hotelAt hotelJ_B cityJ)
    (hotelAt hotelK_A cityK)
    (hotelAt hotelK_B cityK)
    (hotelAt hotelL_A cityL)
    (hotelAt hotelL_B cityL)

    (flight Origin cityA)
    (flight Origin cityB)
    (flight Origin cityC)
    (flight Origin cityD)
    (flight Origin cityE)
    (flight Origin cityF)
    (flight Origin cityG)
    (flight Origin cityH)
    (flight Origin cityI)
    (flight Origin cityJ)
    (flight Origin cityK)
    (flight Origin cityL)
    (flight cityA cityB)
    (flight cityA cityG)
    (flight cityA cityH)
    (flight cityA cityJ)
    (flight cityB cityC)
    (flight cityB cityH)
    (flight cityB cityK)
    (flight cityB cityL)
    (flight cityC cityI)
    (flight cityC cityJ)
    (flight cityC cityK)
    (flight cityC cityL)
    (flight cityD cityA)
    (flight cityD cityB)
    (flight cityD cityK)
    (flight cityD cityL)
    (flight cityE cityA)
    (flight cityE cityH)
    (flight cityE cityI)
    (flight cityE cityK)
    (flight cityF cityA)
    (flight cityF cityB)
    (flight cityF cityH)
    (flight cityF cityK)
    (flight cityG cityA)
    (flight cityG cityB)
    (flight cityG cityF)
    (flight cityG cityH)
    (flight cityH cityE)
    (flight cityH cityG)
    (flight cityH cityI)
    (flight cityH cityK)
    (flight cityI cityC)
    (flight cityI cityE)
    (flight cityI cityF)
    (flight cityI cityJ)
    (flight cityJ cityC)
    (flight cityJ cityE)
    (flight cityJ cityF)
    (flight cityJ cityK)
    (flight cityK cityB)
    (flight cityK cityG)
    (flight cityK cityI)
    (flight cityK cityJ)
    (flight cityL cityB)
    (flight cityL cityF)
    (flight cityL cityG)
    (flight cityL cityJ)

    (= (citiesVisited) 0)
    (= (totalDays) 0)
    (= (minDaysInCity) 1)
    (= (maxDaysInCity) 2)

    (= (stayDuration Origin) 0)
    (= (stayDuration cityA) 0)
    (= (stayDuration cityB) 0)
    (= (stayDuration cityC) 0)
    (= (stayDuration cityD) 0)
    (= (stayDuration cityE) 0)
    (= (stayDuration cityF) 0)
    (= (stayDuration cityG) 0)
    (= (stayDuration cityH) 0)
    (= (stayDuration cityI) 0)
    (= (stayDuration cityJ) 0)
    (= (stayDuration cityK) 0)
    (= (stayDuration cityL) 0)
    (= (cityInterest Origin) 0)
    (= (cityInterest cityA) 1)
    (= (cityInterest cityB) 2)
    (= (cityInterest cityC) 2)
    (= (cityInterest cityD) 2)
    (= (cityInterest cityE) 1)
    (= (cityInterest cityF) 1)
    (= (cityInterest cityG) 2)
    (= (cityInterest cityH) 3)
    (= (cityInterest cityI) 1)
    (= (cityInterest cityJ) 3)
    (= (cityInterest cityK) 3)
    (= (cityInterest cityL) 2)
    (= (totalInterest) 0)

  )

  (:goal
    (and
      (>= (citiesVisited) 6)
      (>= (totalDays) 20)
    )
  )

  (:metric 
    minimize (totalInterest)
  )

)
